
# Required plugins: vagrant-aws, vagrant-reload
# https://github.com/laravel/homestead
# https://github.com/laravel/settler
# https://github.com/mitchellh/vagrant-aws

require 'json'
require 'yaml'

VAGRANTFILE_API_VERSION ||= "2"
confDir = $confDir ||= File.expand_path("~/.homestead-aws")

homesteadYamlPath = confDir + "/Homestead.yaml"
homesteadJsonPath = confDir + "/Homestead.json"
afterScriptPath = confDir + "/after.sh"
aliasesPath = confDir + "/aliases"


require File.expand_path(File.dirname(__FILE__) + '/scripts/homestead.rb')

Vagrant.require_version '>= 1.8.4'

Vagrant.configure("2") do |config|
	config.vm.box = "dummy"
	config.vm.box_url = "https://github.com/mitchellh/vagrant-aws/raw/master/dummy.box"

  config.vm.provider :aws do |aws, override|
    #aws.access_key_id = "YOUR KEY"
    #aws.secret_access_key = "YOUR SECRET KEY"
    #aws.session_token = "SESSION TOKEN"
    aws.keypair_name = "sang"

    aws.ami = "ami-06963965"
    aws.ami = "ami-120fa771"
    aws.instance_type = "t2.micro"
    aws.region = "ap-southeast-1"
    aws.tags = {
      'Name' => 'DevVN Fareye Integrate Demo',
      'Team' => 'cteam'
    }
    aws.security_groups = ['sg-a87193cd', 'sg-88ae6ced']
    #aws.user_data = File.read("user_data.txt")

    override.ssh.username = "ubuntu"
    override.ssh.private_key_path = "~/.ssh/id_rsa"
  end

  config.vm.synced_folder './', '/vagrant', disabled: true

  # This has been packed into the image ami-120fa771. Uncomment if you use plain ubuntu ami.
  # Run The Base Provisioning Script
  #config.vm.provision 'shell', path: './scripts/update.sh'
  #config.vm.provision :reload
  #config.vm.provision 'shell', path: './scripts/provision.sh'


  if File.exist? aliasesPath then
        config.vm.provision "file", source: aliasesPath, destination: "/tmp/bash_aliases"
        config.vm.provision "shell" do |s|
          s.inline = "awk '{ sub(\"\r$\", \"\"); print }' /tmp/bash_aliases > /home/ubuntu/.bash_aliases"
        end
    end

    if File.exist? homesteadYamlPath then
        settings = YAML::load(File.read(homesteadYamlPath))
    elsif File.exist? homesteadJsonPath then
        settings = JSON.parse(File.read(homesteadJsonPath))
    end

    Homestead.configure(config, settings)

    if File.exist? afterScriptPath then
        config.vm.provision "shell", path: afterScriptPath, privileged: false
    end

    if defined? VagrantPlugins::HostsUpdater
        config.hostsupdater.aliases = settings['sites'].map { |site| site['map'] }
    end
end


